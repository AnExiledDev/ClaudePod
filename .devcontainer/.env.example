# ClaudePod Environment Variables
# Copy this file to .env and add your API keys
# The .env file is git-ignored for security

# Tavily Search API Key
# Get yours at: https://tavily.com/
# Provides web search capabilities to Claude
TAVILY_API_KEY=your-tavily-api-key-here

# Ref.Tools API Key  
# Get yours at: https://ref.tools/
# Provides reference documentation and coding tools
REF_TOOLS_API_KEY=your-ref-tools-api-key-here

# GitHub Personal Access Token
# Get yours at: https://github.com/settings/tokens
# Required scopes: repo, read:packages (minimum recommended)
# Enables GitHub MCP server for repository management
GITHUB_PERSONAL_ACCESS_TOKEN=ghp_your-github-personal-access-token-here

# GitHub API URL (optional)
# Use for GitHub Enterprise Server installations
# Default: https://api.github.com
# GITHUB_API_URL=https://api.github.example.com

# GitHub Toolset (optional)
# Comma-separated list of toolsets to enable
# Available: context,actions,code_security,dependabot,discussions,issues,pull_requests
# Default: all toolsets enabled
# GITHUB_TOOLSET=context,issues,pull_requests

# ============================================================================
# MCP Server Configuration (NEW)  
# ============================================================================
# Control which MCP servers are enabled/disabled
# Set to 'true' to enable, 'false' to disable

# Core MCP Servers (enabled by default, no API keys required)
ENABLE_SERENA_MCP=true                    # Advanced code analysis and semantic search
ENABLE_DEEPWIKI_MCP=true                  # Documentation and knowledge search  
ENABLE_TASKMASTER_MCP=true                # AI-powered task management
ENABLE_SEQUENTIAL_THINKING_MCP=true       # Structured progressive thinking
ENABLE_CCUSAGE_MCP=true                   # Claude Code usage analytics
ENABLE_SEARXNG_ENHANCED_MCP=true          # Enhanced web search with content scraping (uses localhost SearXNG)
ENABLE_SEARXNG_LOCAL=true                 # Run local SearXNG instance in persistent volume (/opt/searxng-local)

# Optional MCP Servers (disabled by default, require API keys above)
ENABLE_TAVILY_MCP=false                   # Web search capabilities (requires TAVILY_API_KEY)
ENABLE_REF_TOOLS_MCP=false                # Reference documentation tools (requires REF_TOOLS_API_KEY) 
ENABLE_GITHUB_MCP=false                   # GitHub integration (requires GITHUB_PERSONAL_ACCESS_TOKEN)

# ============================================================================
# Claude Code Performance & Behavior Settings
# ============================================================================
# These environment variables control Claude Code's performance and behavior
# Values shown are optimized defaults - uncomment to customize

# Bash Command Timeouts (in milliseconds)
# BASH_DEFAULT_TIMEOUT_MS=120000         # Default timeout for bash commands (2 minutes)
# BASH_MAX_TIMEOUT_MS=600000             # Maximum timeout for bash commands (10 minutes)

# Token Limits
# CLAUDE_CODE_MAX_OUTPUT_TOKENS=31999    # Maximum output tokens for Claude responses
# MAX_THINKING_TOKENS=62000              # Maximum tokens for thinking/reasoning
# MAX_MCP_OUTPUT_TOKENS=31999            # Maximum output tokens for MCP server responses

# MCP Server Timeouts (in milliseconds)  
# MCP_TIMEOUT=60000                      # General MCP server timeout (1 minute)
# MCP_TOOL_TIMEOUT=120000                # MCP tool execution timeout (2 minutes)

# Stability & Safety Settings
# DISABLE_AUTOUPDATER=true               # Prevent auto-updates during work sessions
#                                        # (prevents model selection changes & system prompt loss)
# DISABLE_BUG_COMMAND=true               # Disable bug reporting in container environments

# Terminal Setup Automation
# ENABLE_AUTOMATIC_TERMINAL_SETUP=false # Automatically configure terminal keybindings
#                                        # (equivalent to running /terminal-setup command)
#                                        # Default: false (user must manually run /terminal-setup)

# ============================================================================
# Configuration Override Flags 
# ============================================================================
# Set to 'true' to force overwrite existing config files with optimized defaults
# Leave unset (or set to 'false') to preserve existing user customizations

# Claude Code Configuration Override Flags
# OVERRIDE_CLAUDE_SETTINGS=true           # Force overwrite Claude settings.json (statusline, permissions)
# OVERRIDE_CLAUDE_MCP=true                # Force overwrite Claude mcp.json (MCP server definitions)
# OVERRIDE_CLAUDE_SYSTEM_PROMPT=true      # Force overwrite Claude system-prompt.md (CORE instructions)

# Tool Configuration Override Flags  
# OVERRIDE_SERENA_CONFIG=true             # Force overwrite Serena serena_config.yml (dashboard, logging)
# OVERRIDE_TASKMASTER_CONFIG=true         # Force overwrite TaskMaster config.json (Claude Code integration)
# OVERRIDE_SEARXNG_CONFIG=true            # Force overwrite SearXNG ods_config.json (search, scraping settings)
